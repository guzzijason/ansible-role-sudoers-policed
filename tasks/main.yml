# install sudoers configs
---
- name: install sudo
  yum: pkg=sudo state=present
  when: ansible_os_family == 'RedHat'

- name: enable sudoers.d
  lineinfile:
    backup: yes
    dest: /etc/sudoers
    line: '#includedir /etc/sudoers.d'
    state: present
    validate: visudo -cf %s

- name: set fact for tracking installed files
  set_fact: sudoer_list=[]
  when: sudoer_list is undefined

- name: install default sudoer fragment
  copy:
    src: sudoer.top
    dest: "/etc/sudoers.d/00_defaults"
  register: sudoer_default

- name: set fact for tracking installed files
  set_fact: sudoer_list="{{ sudoer_list}} + [ '{{ sudoer_default.dest }}' ]"
  when: sudoer_default|succeeded

- name: install cloud-init sudoer fragment
  template:
    src: sudoers-cloud.j2
    dest: "/etc/sudoers.d/05_cloud-init"
  register: sudoer_cloud
  when:
    - cloud == True
    - "ansible_virtualization_type is defined and ansible_virtualization_type == 'openstack'"

- name: add cloud-init file to tracking list
  set_fact: sudoer_list="{{ sudoer_list}} + [ '{{ sudoer_cloud.dest | default(sudoer_cloud.path) }}' ]"
  when: not sudoer_cloud|skipped

- name: include sudoer vars for team or user
  include_vars: file="{{ item }}" name=sudovars
  with_first_found:
    - files:
      - "{{ team }}.yml"
      - "{{ user }}.yml"
  when: team is defined or user is defined

- name: install sudoer fragment for "{{ team | default(user) }}"
  template:
    src: sudoers.j2
    dest: "/etc/sudoers.d/{{ sudovars.priority }}_{{ team | default(user) }}"
  register: sudoer_user
  when: sudovars.sudoers is defined

- name: add {{ team | default(user) }} file to tracking list
  set_fact: sudoer_list="{{ sudoer_list}} + [ '{{ sudoer_user.dest | default(sudoer_user.path) }}' ]"
  when: sudoer_cloud|succeeded

